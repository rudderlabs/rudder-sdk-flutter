name: 'Unit Tests, Coverage & Sonar'

on:
  workflow_dispatch:
  push:
    branches: ['develop', 'main']
  pull_request:
    branches: ['develop', 'main']
    types: ['opened', 'reopened', 'synchronize']

jobs:
  build:
    name: 'Unit Tests, Coverage & Sonar'
    runs-on: ubuntu-latest
    if: startsWith(github.event.pull_request.head.ref, 'release/') != true

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Dart
        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c #v1.3

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Setup Flutter
        uses: subosito/flutter-action@e938fdf56512cc96ef2f93601a5a40bde3801046 #v2.19.0
        with:
          channel: 'stable'
          architecture: x64

      - name: Setup .env file
        run: |
          cat <<EOF > packages/example/.env
            WRITE_KEY=${{ secrets.TEST_WRITE_KEY }}
            DATA_PLANE_URL=${{ secrets.TEST_DATAPLANE_URL }}
           EOF

      - name: Install Melos
        run: |
          dart pub global activate melos 2.9.0

      - name: Install dependencies
        run: |
          melos run setup:ci

      - name: Execute unit tests
        run: |
          melos run test:all
          melos run analyze:ci

      - name: Combine unit test coverage reports
        run: |
          mkdir coverage
          touch coverage/lcov.info
          melos run combine:coverage

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@aa494459d7c39c106cc77b166de8b4250a32bb97  #v5.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
